<title>Customer Management Modals</title>

<body>



  <!-- View Customer Modal -->
  <div id="viewModal" class="modal-overlay">
    <div class="modal">
      <div class="modal-header">
        <h3 class="modal-title">Customer Details</h3>
        <button class="close-button">&times;</button>
      </div>
      <div class="modal-body">
        <div class="section">
          <h4 class="section-title">Basic Information</h4>
          <div class="customer-info">
            <div class="info-group">
              <span class="info-label">Name</span>
              <span class="info-value" id="view-name">adsfa</span>
            </div>
            <div class="info-group">
              <span class="info-label">Email</span>
              <span class="info-value" id="view-email">my@gmail.com</span>
            </div>
            <div class="info-group">
              <span class="info-label">Phone</span>
              <span class="info-value" id="view-phone">1d234567</span>
            </div>
            <div class="info-group">
              <span class="info-label">Member Since</span>
              <span class="info-value" id="view-created">dd</span>
            </div>
            <div class="info-group">
              <span class="info-label">Status</span>
              <span class="info-value" id="view-status">Active</span>
            </div>
          </div>
        </div>

        <div class="section">
          <h4 class="section-title">Order Information</h4>
          <div class="customer-info">
            <div class="info-group">
              <span class="info-label">Total Orders</span>
              <span class="info-value" id="view-orders">0</span>
            </div>
            <div class="info-group">
              <span class="info-label">Total Spent</span>
              <span class="info-value" id="view-spent">$0.00</span>
            </div>
          </div>
        </div>

        <div class="section">
          <h4 class="section-title">Wallet & Referrals</h4>
          <div class="customer-info">
            <div class="info-group">
              <span class="info-label">Wallet Balance</span>
              <span class="info-value" id="view-wallet">$0.00</span>
            </div>
            <div class="info-group">
              <span class="info-label">Referral Code</span>
              <span class="info-value" id="view-referral">MIZMOH21</span>
            </div>
            <div class="info-group">
              <span class="info-label">Redeemed Status</span>
              <span class="info-value" id="view-redeemed">Not redeemed</span>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary">Close</button>
      </div>
    </div>
  </div>

  <!-- Edit Customer Modal -->
  <div id="editModal" class="modal-overlay">
    <div class="modal">
      <div class="modal-header">
        <h3 class="modal-title">Edit Customer</h3>
        <button class="close-button">&times;</button>
      </div>
      <div class="modal-body">
        <div class="customer-info">
          <div class="info-group">
            <span class="info-label">Customer Name</span>
            <span class="info-value" id="edit-name">Mohammed Mizhab</span>
          </div>
          <div class="info-group">
            <span class="info-label">Customer Email</span>
            <span class="info-value" id="edit-email">mohammedmizhabkinju@gmail.com</span>
          </div>
        </div>

        <div class="form-group">
          <span class="form-label">Customer Status</span>
          <div id="status-actions">
            <button class="btn btn-secondary" id="block-unblock-btn" data-id="" data-status="">Block</button>

            </button>

          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary">Cancel</button>
      </div>
    </div>
  </div>

  <!-- Add New Customer Modal -->
  <div id="addModal" class="modal-overlay">
    <div class="modal">
      <div class="modal-header">
        <h3 class="modal-title">Add New Customer</h3>
        <button class="close-button">&times;</button>
      </div>
      <div class="modal-body">
        <form id="addCustomerForm" ">
          <div class="form-group">
            <label for="name" class="form-label">Name</label>
            <input type="text" id="name" name="name" class="form-control" required>
          </div>
          <div class="form-group">
            <label for="email" class="form-label">Email</label>
            <input type="email" id="email" name="email" class="form-control" required>
          </div>
          <div class="form-group">
            <label for="password" class="form-label">Password</label>
            <input type="password" id="password" name="password" class="form-control" required>
          </div>
          <div class="form-group">
            <label for="phone" class="form-label">Phone (optional)</label>
            <input type="tel" id="phone" name="phone" class="form-control">
          </div>
          <div class="form-group">
            <label class="form-label">Role</label>
            <div>
              <input type="checkbox" id="isAdmin" name="isAdmin">
              <label for="isAdmin">Admin Access</label>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary">Cancel</button>
        <button class="btn btn-primary" onclick="submitAddCustomerForm()">Add Customer</button>
      </div>
    </div>
  </div>

</body>


<!-- Make sure SweetAlert2 is loaded -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>


  // Functions to show and hide modals

  document.querySelectorAll('.view-btn').forEach((btn) => {
    btn.addEventListener('click', async () => {
      const userId = btn.getAttribute('data-id');

      try {
        const res = await fetch(`/admin/customers/${userId}`);
        const user = await res.json();

        // Update modal fields
        document.getElementById('view-name').textContent = user.name;
        document.getElementById('view-email').textContent = user.email;
        document.getElementById('view-phone').textContent = user.phone;
        document.getElementById('view-created').textContent = new Date(user.createdAt).toLocaleDateString();
        document.getElementById('view-status').textContent = user.status ? 'Blocked' : 'Active';
        // Show modal
        document.getElementById('viewModal').style.display = 'flex';
      } catch (err) {
        console.error('Error fetching user:', err);
      }
    });
  });

  document.querySelectorAll('.edit-btn').forEach((btn) => {
    btn.addEventListener('click', async () => {
      const userId = btn.getAttribute('data-id');

      try {
        const res = await fetch(`/admin/customers/${userId}`);
        const user = await res.json();

        // Fill the modal fields with data
        document.getElementById('edit-name').textContent = user.name;
        document.getElementById('edit-email').textContent = user.email;

        // block button conficuration
        const blockBtn = document.getElementById('block-unblock-btn');
        blockBtn.textContent = user.isBlocked ? 'Unblock' : 'Block';
        blockBtn.dataset.userid = user._id;
        blockBtn.dataset.status = user.isBlocked;


        // Show the modal
        document.getElementById('editModal').style.display = 'flex';

      } catch (err) {
        console.error('Error fetching user:', err);
      }
    });
  });

  document.getElementById('add-customer-btn').addEventListener('click', (e) => {
    document.getElementById('addModal').style.display = 'flex';
    e.preventDefault(); // Prevent default form submission
  });





  // Update user block/unblock status

  document.getElementById('block-unblock-btn').addEventListener('click', async (e) => {
    const userId = e.target.dataset.userid;
    const currentStatus = e.target.dataset.status === 'true'; // Convert string to boolean
    const action = currentStatus ? 'unblock' : 'block';

    Swal.fire({
      title: `Are you sure you want to ${action} this user?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: `Yes, ${action}`,
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/customers/${userId}/block`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ isBlocked: !currentStatus }),
          });

          if (response.ok) {
            const result = await response.json();
            // Update button text and status
            e.target.textContent = result.isBlocked ? 'Unblock' : 'Block';
            e.target.dataset.status = result.isBlocked;

            Swal.fire({
              toast: true,
              position: 'top-end', // right top corner
              icon: 'success',
              title: `User has been ${action}ed.`,
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
            });

          } else {
            showToast('error', 'Failed to update user status');
            console.error('Failed to update user status:', response.statusText);

          }
        } catch (error) {
          showToast('error', 'Something went wrong');
          console.error('Error:', error);
        }
      }
    });
  });





  // Close modal function
  document.querySelectorAll('.close-button, .btn-secondary').forEach((btn) => {
    btn.addEventListener('click', () => {
      btn.closest('.modal-overlay').style.display = 'none';
    });
  });


  // Hide modal function
  document.querySelectorAll('.modal-overlay').forEach((overlay) => {
    overlay.addEventListener('click', (e) => {
      // Check if clicked element is the overlay itself (not the modal content)
      if (e.target === overlay) {
        overlay.style.display = 'none';
      }
    });
  });


  // Submit Add Customer Form

  async function submitAddCustomerForm() {
    const form = document.getElementById('addCustomerForm');

    const formData = {
      name: form.name.value,
      email: form.email.value,
      password: form.password.value,
      phone: form.phone.value,
      isAdmin: form.isAdmin.checked,
    }

    try {
      const response = await fetch('/admin/customers/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });

      const result = await response.json();


      if (response.ok) {
      // Show success dialog and reload after confirmation
      Swal.fire({
        toast: true,
      position: 'top-end',
        icon: 'success',
        title: 'Customer added successfully!',
        
      }).then(() => {
        document.getElementById('addModal').style.display = 'none';
        window.location.reload();
      });
    }
       else {
        // Show error message
        showToast('error', 'Failed to add customer - ' + result.message);
        console.error('Failed to add customer');

      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while adding the customer. Please try again.');
    }
  }


  

  function showToast(type, message) {
    Swal.fire({
      toast: true,
      position: 'top-end',
      icon: type, // 'success', 'error', 'warning'
      title: message,
      showConfirmButton: false,
      timer: 5000,
      timerProgressBar: true,
    });
  }


</script>
</body>
